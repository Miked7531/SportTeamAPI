// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportTeam.API.Data;

#nullable disable

namespace SportTeam.API.Migrations
{
    [DbContext(typeof(SportTeamDbContext))]
    partial class SportTeamDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SportTeam.API.Data.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Bob",
                            LastName = "Bobby",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jack",
                            LastName = "Samson",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Sam",
                            LastName = "Winchester",
                            TeamId = 3
                        });
                });

            modelBuilder.Entity("SportTeam.API.Data.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "Oakland",
                            Name = "Raiders"
                        },
                        new
                        {
                            Id = 2,
                            Location = "Dallas",
                            Name = "Cowboys"
                        },
                        new
                        {
                            Id = 3,
                            Location = "Charlotte",
                            Name = "Panthers"
                        });
                });

            modelBuilder.Entity("SportTeam.API.Data.Player", b =>
                {
                    b.HasOne("SportTeam.API.Data.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("SportTeam.API.Data.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
